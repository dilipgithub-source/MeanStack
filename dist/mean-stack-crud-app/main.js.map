{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/employee-create/employee-create.component.css","webpack:///./src/app/components/employee-create/employee-create.component.html","webpack:///./src/app/components/employee-create/employee-create.component.ts","webpack:///./src/app/components/employee-edit/employee-edit.component.css","webpack:///./src/app/components/employee-edit/employee-edit.component.html","webpack:///./src/app/components/employee-edit/employee-edit.component.ts","webpack:///./src/app/components/employee-list/employee-list.component.css","webpack:///./src/app/components/employee-list/employee-list.component.html","webpack:///./src/app/components/employee-list/employee-list.component.ts","webpack:///./src/app/service/api.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EmployeeCreateComponent } from './components/employee-create/employee-create.component';\nimport { EmployeeListComponent } from './components/employee-list/employee-list.component';\nimport { EmployeeEditComponent } from './components/employee-edit/employee-edit.component';\n\nconst routes: Routes = [\n  { path: '', pathMatch: 'full', redirectTo: 'create-employee' },\n  { path: 'create-employee', component: EmployeeCreateComponent },\n  { path: 'edit-employee/:id', component: EmployeeEditComponent },\n  { path: 'employees-list', component: EmployeeListComponent }  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }","module.exports = \".menu-spacer {\\n  flex: 1 1 auto;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxjQUFjO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWVudS1zcGFjZXIge1xuICBmbGV4OiAxIDEgYXV0bztcbn1cbiJdfQ== */\"","module.exports = \"<div class=\\\"d-flex flex-column flex-md-row align-items-center p-3 px-md-4 mb-3 bg-white border-bottom shadow-sm\\\">\\n  <h5 class=\\\"my-0 mr-md-auto font-weight-normal\\\">MEAN Stack CRUD</h5>\\n  <nav class=\\\"my-2 my-md-0 mr-md-3\\\">\\n    <a class=\\\"btn btn-outline-primary\\\" routerLinkActive=\\\"active\\\" routerLink=\\\"/employees-list\\\">View Employees</a>\\n  </nav>\\n  <a class=\\\"btn btn-outline-primary\\\" routerLinkActive=\\\"active\\\" routerLink=\\\"/create-employee\\\">Add Employee</a>\\n</div>\\n\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'mean-stack-crud-app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { EmployeeCreateComponent } from './components/employee-create/employee-create.component';\nimport { EmployeeListComponent } from './components/employee-list/employee-list.component';\nimport { EmployeeEditComponent } from './components/employee-edit/employee-edit.component';\n\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { ApiService } from './service/api.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EmployeeCreateComponent,\n    EmployeeListComponent,\n    EmployeeEditComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [ApiService],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule { }","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZW1wbG95ZWUtY3JlYXRlL2VtcGxveWVlLWNyZWF0ZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"row justify-content-center\\\">\\n  <div class=\\\"col-md-4 register-employee\\\">\\n    <!-- form card register -->\\n    <div class=\\\"card-body\\\">\\n      <form [formGroup]=\\\"employeeForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputName\\\">Name</label>\\n          <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"name\\\">\\n          <!-- error -->\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"submitted && myForm.name.errors?.required\\\">\\n            Name is required.\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputEmail3\\\">Email</label>\\n          <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"email\\\">\\n          <!-- error -->\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"submitted && myForm.email.errors?.required\\\">\\n            Enter your email.\\n          </div>\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"submitted && myForm.email.errors?.pattern\\\">\\n            Enter valid email.\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputPassword3\\\">Designation</label>\\n          <select class=\\\"custom-select form-control\\\" (change)=\\\"updateProfile($event.target.value)\\\"\\n            formControlName=\\\"designation\\\">\\n            <option value=\\\"\\\">Choose...</option>\\n            <option *ngFor=\\\"let employeeProfile of EmployeeProfile\\\" value=\\\"{{employeeProfile}}\\\">{{employeeProfile}}\\n            </option>\\n          </select>\\n          <!-- error -->\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"submitted && myForm.designation.errors?.required\\\">\\n            Choose designation.\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputVerify3\\\">Mobile No</label>\\n          <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"phoneNumber\\\">\\n          <!-- error -->\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"submitted && myForm.phoneNumber.errors?.required\\\">\\n            Enter your phone number.\\n          </div>\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"submitted && myForm.phoneNumber.errors?.pattern\\\">\\n            Enter Numbers Only\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <button class=\\\"btn btn-success btn-lg btn-block\\\" type=\\\"submit\\\">Register</button>\\n        </div>\\n      </form>\\n\\n    </div>\\n  </div><!-- form card register -->\\n</div>\\n\"","import { Router } from '@angular/router';\nimport { ApiService } from './../../service/api.service';\nimport { Component, OnInit, NgZone } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\n\n@Component({\n  selector: 'app-employee-create',\n  templateUrl: './employee-create.component.html',\n  styleUrls: ['./employee-create.component.css']\n})\n\nexport class EmployeeCreateComponent implements OnInit {  \n  submitted = false;\n  employeeForm: FormGroup;\n  EmployeeProfile:any = ['Finance', 'BDM', 'HR', 'Sales', 'Admin']\n  \n  constructor(\n    public fb: FormBuilder,\n    private router: Router,\n    private ngZone: NgZone,\n    private apiService: ApiService\n  ) { \n    this.mainForm();\n  }\n\n  ngOnInit() { }\n\n  mainForm() {\n    this.employeeForm = this.fb.group({\n      name: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$')]],\n      designation: ['', [Validators.required]],\n      phoneNumber: ['', [Validators.required, Validators.pattern('^[0-9]+$')]]\n    })\n  }\n\n  // Choose designation with select dropdown\n  updateProfile(e){\n    this.employeeForm.get('designation').setValue(e, {\n      onlySelf: true\n    })\n  }\n\n  // Getter to access form control\n  get myForm(){\n    return this.employeeForm.controls;\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    if (!this.employeeForm.valid) {\n      return false;\n    } else {\n      this.apiService.createEmployee(this.employeeForm.value).subscribe(\n        (res) => {\n          console.log('Employee successfully created!')\n          this.ngZone.run(() => this.router.navigateByUrl('/employees-list'))\n        }, (error) => {\n          console.log(error);\n        });\n    }\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZW1wbG95ZWUtZWRpdC9lbXBsb3llZS1lZGl0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \" <div class=\\\"row justify-content-center\\\">\\n   <div class=\\\"col-md-4 register-employee\\\">\\n     <!-- form card register -->\\n     <div class=\\\"card card-outline-secondary\\\">\\n       <div class=\\\"card-header\\\">\\n         <h3 class=\\\"mb-0\\\">Edit Employee</h3>\\n       </div>\\n       <div class=\\\"card-body\\\">\\n         <form [formGroup]=\\\"editForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n           <div class=\\\"form-group\\\">\\n             <label for=\\\"inputName\\\">Name</label>\\n             <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"name\\\">\\n             <div class=\\\"invalid-feedback\\\" *ngIf=\\\"submitted && myForm.name.errors?.required\\\">\\n               Name is required.\\n             </div>\\n           </div>\\n           <div class=\\\"form-group\\\">\\n             <label for=\\\"inputEmail3\\\">Email</label>\\n             <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"email\\\">\\n             <!-- error -->\\n             <div class=\\\"invalid-feedback\\\" *ngIf=\\\"submitted && myForm.email.errors?.required\\\">\\n               Enter your email.\\n             </div>\\n             <div class=\\\"invalid-feedback\\\" *ngIf=\\\"submitted && myForm.email.errors?.pattern\\\">\\n               Enter valid email.\\n             </div>\\n           </div>\\n\\n           <div class=\\\"form-group\\\">\\n             <label for=\\\"inputPassword3\\\">Designation</label>\\n             <select class=\\\"custom-select form-control\\\" (change)=\\\"updateProfile($event.target.value)\\\"\\n               formControlName=\\\"designation\\\">\\n               <option value=\\\"\\\">Choose...</option>\\n               <option *ngFor=\\\"let employeeProfile of EmployeeProfile\\\" value=\\\"{{employeeProfile}}\\\">{{employeeProfile}}\\n               </option>\\n             </select>\\n             <!-- error -->\\n             <div class=\\\"invalid-feedback\\\" *ngIf=\\\"submitted && myForm.designation.errors?.required\\\">\\n               Choose designation.\\n             </div>\\n           </div>\\n\\n           <div class=\\\"form-group\\\">\\n             <label for=\\\"inputVerify3\\\">Mobile No</label>\\n             <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"phoneNumber\\\">\\n             <!-- error -->\\n             <div class=\\\"invalid-feedback\\\" *ngIf=\\\"submitted && myForm.phoneNumber.errors?.required\\\">\\n               Enter your phone number.\\n             </div>\\n             <div class=\\\"invalid-feedback\\\" *ngIf=\\\"submitted && myForm.phoneNumber.errors?.pattern\\\">\\n               Enter Numbers Only\\n             </div>\\n           </div>\\n\\n           <div class=\\\"form-group\\\">\\n             <button class=\\\"btn btn-success btn-lg btn-block\\\" type=\\\"submit\\\">Update</button>\\n           </div>\\n         </form>\\n       </div>\\n     </div><!-- form  -->\\n   </div>\\n </div>\\n\"","import { Employee } from './../../model/Employee';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { ApiService } from './../../service/api.service';\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\n\n\n@Component({\n  selector: 'app-employee-edit',\n  templateUrl: './employee-edit.component.html',\n  styleUrls: ['./employee-edit.component.css']\n})\n\nexport class EmployeeEditComponent implements OnInit {\n  submitted = false;\n  editForm: FormGroup;\n  employeeData: Employee[];\n  EmployeeProfile: any = ['Finance', 'BDM', 'HR', 'Sales', 'Admin']\n\n  constructor(\n    public fb: FormBuilder,\n    private actRoute: ActivatedRoute,\n    private apiService: ApiService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.updateEmployee();\n    let id = this.actRoute.snapshot.paramMap.get('id');\n    this.getEmployee(id);\n    this.editForm = this.fb.group({\n      name: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$')]],\n      designation: ['', [Validators.required]],\n      phoneNumber: ['', [Validators.required, Validators.pattern('^[0-9]+$')]]\n    })\n  }\n\n  // Choose options with select-dropdown\n  updateProfile(e) {\n    this.editForm.get('designation').setValue(e, {\n      onlySelf: true\n    })\n  }\n\n  // Getter to access form control\n  get myForm() {\n    return this.editForm.controls;\n  }\n\n  getEmployee(id) {\n    this.apiService.getEmployee(id).subscribe(data => {\n      this.editForm.setValue({\n        name: data['name'],\n        email: data['email'],\n        designation: data['designation'],\n        phoneNumber: data['phoneNumber'],\n      });\n    });\n  }\n\n  updateEmployee() {\n    this.editForm = this.fb.group({\n      name: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$')]],\n      designation: ['', [Validators.required]],\n      phoneNumber: ['', [Validators.required, Validators.pattern('^[0-9]+$')]]\n    })\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    if (!this.editForm.valid) {\n      return false;\n    } else {\n      if (window.confirm('Are you sure?')) {\n        let id = this.actRoute.snapshot.paramMap.get('id');\n        this.apiService.updateEmployee(id, this.editForm.value)\n          .subscribe(res => {\n            this.router.navigateByUrl('/employees-list');\n            console.log('Content updated successfully!')\n          }, (error) => {\n            console.log(error)\n          })\n      }\n    }\n  }\n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZW1wbG95ZWUtbGlzdC9lbXBsb3llZS1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container\\\">\\n  <!-- No data message -->\\n  <p *ngIf=\\\"Employee.length <= 0\\\" class=\\\"no-data text-center\\\">There is no employee added yet!</p>\\n\\n  <!-- Employee list -->\\n  <table class=\\\"table table-bordered\\\" *ngIf=\\\"Employee.length > 0\\\">\\n    <thead class=\\\"table-success\\\">\\n      <tr>\\n        <th scope=\\\"col\\\">Employee ID</th>\\n        <th scope=\\\"col\\\">Name</th>\\n        <th scope=\\\"col\\\">Email</th>\\n        <th scope=\\\"col\\\">Designation</th>\\n        <th scope=\\\"col\\\">Phone No</th>\\n        <th scope=\\\"col center\\\">Update</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let employee of Employee; let i = index\\\">\\n        <th scope=\\\"row\\\">{{employee._id}}</th>\\n        <td>{{employee.name}}</td>\\n        <td>{{employee.email}}</td>\\n        <td>{{employee.designation}}</td>\\n        <td>{{employee.phoneNumber}}</td>\\n        <td class=\\\"text-center edit-block\\\">\\n          <span class=\\\"edit\\\" [routerLink]=\\\"['/edit-employee/', employee._id]\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-success btn-sm\\\">Edit</button>\\n          </span>\\n          <span class=\\\"delete\\\" (click)=\\\"removeEmployee(employee, i)\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\">Delete</button>\\n          </span>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from './../../service/api.service';\n\n@Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.css']\n})\n\nexport class EmployeeListComponent implements OnInit {\n  \n  Employee:any = [];\n\n  constructor(private apiService: ApiService) { \n    this.readEmployee();\n  }\n\n  ngOnInit() {}\n\n  readEmployee(){\n    this.apiService.getEmployees().subscribe((data) => {\n     this.Employee = data;\n    })    \n  }\n\n  removeEmployee(employee, index) {\n    if(window.confirm('Are you sure?')) {\n        this.apiService.deleteEmployee(employee._id).subscribe((data) => {\n          this.Employee.splice(index, 1);\n        }\n      )    \n    }\n  }\n\n}","import { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ApiService {\n  \n  baseUri:string = 'http://localhost:4000/api';\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\n\n  constructor(private http: HttpClient) { }\n\n  // Create\n  createEmployee(data): Observable<any> {\n    let url = `${this.baseUri}/create`;\n    return this.http.post(url, data)\n      .pipe(\n        catchError(this.errorMgmt)\n      )\n  }\n\n  // Get all employees\n  getEmployees() {\n    return this.http.get(`${this.baseUri}`);\n  }\n\n  // Get employee\n  getEmployee(id): Observable<any> {\n    let url = `${this.baseUri}/read/${id}`;\n    return this.http.get(url, {headers: this.headers}).pipe(\n      map((res: Response) => {\n        return res || {}\n      }),\n      catchError(this.errorMgmt)\n    )\n  }\n\n  // Update employee\n  updateEmployee(id, data): Observable<any> {\n    let url = `${this.baseUri}/update/${id}`;\n    return this.http.put(url, data, { headers: this.headers }).pipe(\n      catchError(this.errorMgmt)\n    )\n  }\n\n  // Delete employee\n  deleteEmployee(id): Observable<any> {\n    let url = `${this.baseUri}/delete/${id}`;\n    return this.http.delete(url, { headers: this.headers }).pipe(\n      catchError(this.errorMgmt)\n    )\n  }\n\n  // Error handling \n  errorMgmt(error: HttpErrorResponse) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      // Get client-side error\n      errorMessage = error.error.message;\n    } else {\n      // Get server-side error\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    console.log(errorMessage);\n    return throwError(errorMessage);\n  }\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}